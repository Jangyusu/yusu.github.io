---
import { getCollection } from 'astro:content';
import Layout from '@layouts/Layout.astro';
import MetaData from '@layouts/MetaData.astro';
import UtterancesScript from '@layouts/UtterancesScript.astro';
import TagList from '@/components/TagList.astro';

export async function getStaticPaths() {
  const postEntries = await getCollection('post');
  const postEntriesLength = postEntries.length;

  return postEntries
    .sort((a, b) => b.data.createDate.getTime() - a.data.createDate.getTime())
    .map((entry, i) => {
      const prevEntry = i + 1 === postEntriesLength ? null : postEntries[i + 1];
      const nextEntry = i === 0 ? null : postEntries[i - 1];

      return {
        params: { slug: entry.slug },
        props: { entry, prevEntry, nextEntry },
      };
    });
}

const { entry, prevEntry, nextEntry } = Astro.props;

const { title, description, thumbnail, tags, createDate } = entry.data;
const { Content } = await entry.render();
---

<Layout>
  <MetaData
    title={`${title} | Yusu.log`}
    description={description}
    imagePath={thumbnail}
    slot="meta"
  />
  <div
    class="flex flex-col gap-12 justify-between min-h-[13rem] p-4 border-b mb-24"
  >
    <h1 class="text-3xl md:text-4xl font-bold dark:text-white transition">
      {title}
    </h1>
    <div class="flex justify-between items-center">
      <div class="min-w-0 flex-1 justify-start">
        <TagList tags={tags} isActivate />
      </div>
      <div class="text-gray-400">
        {createDate.toLocaleDateString('ko-KR')}
      </div>
    </div>
  </div>
  <img src={`${import.meta.env.BASE_URL}${thumbnail}`} alt="thumbnail" />
  <div
    class="prose prose-sm md:prose-base max-w-none mt-12 prose-hr:my-4 prose-h1:mb-0"
  >
    <Content />
  </div>

  {
    (prevEntry || nextEntry) && (
      <div class="pt-12 pb-8 flex flex-col-reverse md:flex-row justify-between items-stretch gap-6">
        {prevEntry && (
          <a
            href={`${import.meta.env.BASE_URL}posts/${prevEntry?.slug}`}
            class="w-full"
          >
            <button class="w-full h-full py-3 px-4 bg-slate-100 dark:bg-slate-800 flex justify-start items-center gap-3 transition">
              <span class="material-symbols-rounded text-4xl text-sky-400">
                arrow_circle_left
              </span>
              <div class="flex flex-col items-start gap-0.5">
                <p class="text-xs text-slate-700 dark:text-slate-300 transition">
                  이전 포스트
                </p>
                <p class="text-slate-900 dark:text-slate-100 text-left break-keep transition">
                  {prevEntry?.data.title}
                </p>
              </div>
            </button>
          </a>
        )}

        {nextEntry && (
          <a
            href={`${import.meta.env.BASE_URL}posts/${nextEntry?.slug}`}
            class="w-full"
          >
            <button class="w-full h-full p-4 bg-slate-100 dark:bg-slate-800 flex justify-end items-center gap-3 transition">
              <div class="flex flex-col items-end gap-0.5">
                <p class="text-xs text-slate-700 dark:text-slate-300 transition">
                  다음 포스트
                </p>
                <p class="text-slate-900 dark:text-slate-100 text-right break-keep transition">
                  {nextEntry?.data.title}
                </p>
              </div>
              <span class="material-symbols-rounded text-4xl text-sky-400 transition">
                arrow_circle_right
              </span>
            </button>
          </a>
        )}
      </div>
    )
  }

  <UtterancesScript />
</Layout>
